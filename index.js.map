{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["// Список параметрів рядка запиту, які тобі обов'язково необхідно вказати:\n\n//     key — твій унікальний ключ доступу до API.\n//     q — слово для пошуку. Те, що буде вводити користувач.\n//     image_type — тип зображення. Потрібні тільки фотографії, тому постав значення photo.\n//     orientation — орієнтація фотографії. Постав значення horizontal.\n//     safesearch — фільтр за віком. Постав значення true.\n\n// У відповіді буде об’єкт із декількома властивостями, в одному з яких буде масив зображень, що задовольнили критерії параметрів запиту.\n\n// Якщо бекенд повертає порожній масив, значить, нічого підходящого не було знайдено. У такому разі показуй повідомлення з текстом \"Sorry, there are no images matching your search query. Please try again!\". Для повідомлень використовуй бібліотеку iziToast.\n\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\nimport { list } from 'postcss';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst API_KEY = '43801311-7231ce11da623161c2dfbe05c';\n\nconst form = document.querySelector('.js-search-form');\nconst gallery = document.querySelector('.js-gallery');\n\n// form.addEventListener('submit', handleSearch);\n\n// function handleSearch(event) {\n//   event.preventDefault();\n// }\n\nconst params = new URLSearchParams({\n  key: API_KEY,\n  // q: '',\n  image_type: 'photo',\n  orientation: 'horizontal',\n  safesearch: 'true',\n});\n\nfetch(`https://pixabay.com/api/?${params}`)\n  .then(response => {\n    // console.log('response', response);\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n    return response.json();\n  })\n  .then(data => {\n    console.log('data', data);\n    gallery.insertAdjacentHTML('beforeend', createMarkup(data.hits));\n  })\n  .catch(error => {\n    console.log('error', error);\n  });\n\nfunction createMarkup(arr) {\n  return arr\n    .map(\n      ({ previewURL, tags }) => `\n        <li class=\"gallery-item\">\n        <img src=\"${previewURL}\" alt=\"${tags}\" width=\"360\">\n        </li>\n      `\n    )\n    .join('');\n}\n"],"names":["API_KEY","gallery","params","response","data","createMarkup","error","arr","previewURL","tags"],"mappings":"0uBAmBA,MAAMA,EAAU,qCAEH,SAAS,cAAc,iBAAiB,EACrD,MAAMC,EAAU,SAAS,cAAc,aAAa,EAQ9CC,EAAS,IAAI,gBAAgB,CACjC,IAAKF,EAEL,WAAY,QACZ,YAAa,aACb,WAAY,MACd,CAAC,EAED,MAAM,4BAA4BE,CAAM,EAAE,EACvC,KAAKC,GAAY,CAGhB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MAAMA,EAAS,UAAU,EAErC,OAAOA,EAAS,MACpB,CAAG,EACA,KAAKC,GAAQ,CACZ,QAAQ,IAAI,OAAQA,CAAI,EACxBH,EAAQ,mBAAmB,YAAaI,EAAaD,EAAK,IAAI,CAAC,CACnE,CAAG,EACA,MAAME,GAAS,CACd,QAAQ,IAAI,QAASA,CAAK,CAC9B,CAAG,EAEH,SAASD,EAAaE,EAAK,CACzB,OAAOA,EACJ,IACC,CAAC,CAAE,WAAAC,EAAY,KAAAC,CAAI,IAAO;AAAA;AAAA,oBAEZD,CAAU,UAAUC,CAAI;AAAA;AAAA,OAGvC,EACA,KAAK,EAAE,CACZ"}